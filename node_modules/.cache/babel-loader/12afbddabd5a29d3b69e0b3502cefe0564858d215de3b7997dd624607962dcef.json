{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      link,\n      token\n    } = _ref;\n    this._link = link;\n    this._token = token;\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  // Загрузка информации о пользователе с сервера\n  getUserProfile() {\n    return fetch(`${this._link}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n\n  // Загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n  // Редактирование профиля\n  setUserProfile(data) {\n    return fetch(`${this._link}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.popupName,\n        about: data.popupJob\n      })\n    }).then(this._handleResponse);\n  }\n  //Изменение аватарки\n  setUserAvatar(data) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n  //Добавление карточки\n  addNewCard(data) {\n    return fetch(`${this._link}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n  // Удаление карточки\n  removeCard(id) {\n    return fetch(`${this._link}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n\n  // Постановка лайка\n  addLikeCard(id) {\n    return fetch(`${this._link}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n  // Снятие лайка\n  removeLikeCard(id) {\n    return fetch(`${this._link}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n}\nconst api = new Api({\n  link: \"https://mesto.nomoreparties.co/v1/cohort-69\",\n  token: \"b0a021b8-85d2-4df0-a58b-761352eca6a6\"\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","link","token","_link","_token","_handleResponse","res","ok","json","Promise","reject","status","getUserProfile","fetch","method","headers","authorization","then","getInitialCards","setUserProfile","data","body","JSON","stringify","name","popupName","about","popupJob","setUserAvatar","avatar","addNewCard","removeCard","id","addLikeCard","removeLikeCard","api"],"sources":["/Users/dimad./Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ link, token }) {\n    this._link = link;\n    this._token = token;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  // Загрузка информации о пользователе с сервера\n  getUserProfile() {\n    return fetch(`${this._link}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._handleResponse)\n  }\n\n\n  // Загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._handleResponse)\n  }\n  // Редактирование профиля\n  setUserProfile(data) {\n    return fetch(`${this._link}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.popupName,\n        about: data.popupJob\n      })\n    })\n      .then(this._handleResponse)\n  }\n  //Изменение аватарки\n  setUserAvatar(data) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n      .then(this._handleResponse)\n  }\n  //Добавление карточки\n  addNewCard(data) {\n    return fetch(`${this._link}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(this._handleResponse)\n  }\n  // Удаление карточки\n  removeCard(id) {\n    return fetch(`${this._link}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._handleResponse)\n  }\n\n    // Постановка лайка\n    addLikeCard(id) {\n      return fetch(`${this._link}/cards/likes/${id}`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._token\n        }\n      })\n      .then(this._handleResponse)\n    }\n    // Снятие лайка\n    removeLikeCard(id) {\n      return fetch(`${this._link}/cards/likes/${id}`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._token\n        }\n      })\n      .then(this._handleResponse)\n    }\n}\nconst api = new Api(\n  {\n    link: \"https://mesto.nomoreparties.co/v1/cohort-69\",\n    token: \"b0a021b8-85d2-4df0-a58b-761352eca6a6\",\n  }\n);\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}