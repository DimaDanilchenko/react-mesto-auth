{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction handleRes(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\nexport const registerUser = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleRes);\n};\nexport const loginUser = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(handleRes);\n};\nexport const tokenCheck = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(handleRes);\n};","map":{"version":3,"names":["BASE_URL","handleRes","res","ok","json","Promise","reject","status","registerUser","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","tokenCheck","token"],"sources":["/Users/dimad./Desktop/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nfunction handleRes(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nexport const registerUser = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(handleRes);\n};\n\nexport const loginUser = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(handleRes);\n};\n\nexport const tokenCheck = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    \"Authorization\" : `Bearer ${token}`\n    }\n  }).then(handleRes);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,SAASA,CAACC,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAC/C;AAEA,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,SAAS,CAAC;AACpB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,SAAS,CAAC;AACpB,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MACpC,eAAe,EAAI,UAASO,KAAM;IAClC;EACF,CAAC,CAAC,CAACH,IAAI,CAAChB,SAAS,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}