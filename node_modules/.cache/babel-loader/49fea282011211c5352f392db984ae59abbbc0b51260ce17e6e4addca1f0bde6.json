{"ast":null,"code":"var _jsxFileName = \"/Users/dimad./Desktop/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardClick, setIsDeleteCardClick] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isCardLikeClick, setIsCardLikeClick] = useState(false);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n      console.log(res);\n    }).catch(console.error);\n    api.getUserProfile().then(res => {\n      setCurrentUser(res);\n    }).catch(console.error);\n  }, []);\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleDeleteCardClick() {\n    setIsDeleteCardClick(true);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(console.error);\n  }\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    api.setUserProfile(name, about).then(res => {\n      setCurrentUser(res);\n      closeAllPopup();\n    }).catch(console.error);\n  }\n  function handleCardDelete(card) {\n    api.getInitialCards().then(res => {\n      setCards(state => state.filter(item => item._id));\n      console.log(res);\n    }).catch(console.error);\n  }\n  function closeAllPopup() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        cards: cards,\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onDeleteCard: handleDeleteCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleDeleteCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopup,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l0pk7U1p3VTTqvwpAzlk4If2nDw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Main","Footer","EditAvatarPopup","EditProfilePopup","AddPlacePopup","ImagePopup","CurrentUserContext","api","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteCardClick","setIsDeleteCardClick","selectedCard","setSelectedCard","currentUser","setCurrentUser","isCardLikeClick","setIsCardLikeClick","cards","setCards","getInitialCards","then","res","console","log","catch","error","getUserProfile","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleDeleteCardClick","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleUpdateUser","_ref","name","about","setUserProfile","closeAllPopup","handleCardDelete","filter","item","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onDeleteCard","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","_c","$RefreshReg$"],"sources":["/Users/dimad./Desktop/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardClick, setIsDeleteCardClick] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isCardLikeClick, setIsCardLikeClick] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n        console.log(res);\n      })\n      .catch(console.error)\n    api.getUserProfile()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(console.error)\n  }, [])\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleDeleteCardClick() {\n    setIsDeleteCardClick(true);\n\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(console.error);\n  }\n  function handleUpdateUser({name, about}) {\n    api.setUserProfile(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopup();\n      })\n      .catch(console.error)\n  }\n  function handleCardDelete(card){\n    api.getInitialCards()\n      .then((res) => {\n        setCards((state) => state.filter(item => item._id ));\n        console.log(res)\n      })\n      .catch(console.error)\n  }\n  function closeAllPopup() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          cards={cards}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onDeleteCard={handleDeleteCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteCardClick}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopup}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopup}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopup}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopup}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACgB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,GAAG,CAACqB,eAAe,CAAC,CAAC,CAClBC,IAAI,CAAEC,GAAG,IAAK;MACbH,QAAQ,CAACG,GAAG,CAAC;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;IACvB3B,GAAG,CAAC4B,cAAc,CAAC,CAAC,CACjBN,IAAI,CAAEC,GAAG,IAAK;MACbP,cAAc,CAACO,GAAG,CAAC;IACrB,CAAC,CAAC,CACDG,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAGN,SAASE,qBAAqBA,CAAA,EAAG;IAC/BvB,wBAAwB,CAAC,IAAI,CAAC;EAChC;EACA,SAASwB,sBAAsBA,CAAA,EAAG;IAChCtB,yBAAyB,CAAC,IAAI,CAAC;EACjC;EACA,SAASuB,mBAAmBA,CAAA,EAAG;IAC7BrB,sBAAsB,CAAC,IAAI,CAAC;EAC9B;EACA,SAASsB,eAAeA,CAACC,IAAI,EAAE;IAC7BnB,eAAe,CAACmB,IAAI,CAAC;EACvB;EACA,SAASC,qBAAqBA,CAAA,EAAG;IAC/BtB,oBAAoB,CAAC,IAAI,CAAC;EAE5B;EACA,SAASuB,cAAcA,CAACF,IAAI,EAAE;IAC5B;IACA,MAAMG,OAAO,GAAGH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKzB,WAAW,CAACyB,GAAG,CAAC;;IAE/D;;IAEAxC,GAAG,CAACyC,oBAAoB,CAACR,IAAI,CAACO,GAAG,EAAE,CAACJ,OAAO,CAAC,CACzCd,IAAI,CAAEoB,OAAO,IAAK;MACjBtB,QAAQ,CAAEuB,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACL,GAAG,KAAKP,IAAI,CAACO,GAAG,GAAGE,OAAO,GAAGG,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC,CACDnB,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;EACzB;EACA,SAASmB,gBAAgBA,CAAAC,IAAA,EAAgB;IAAA,IAAf;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAAF,IAAA;IACrC/C,GAAG,CAACkD,cAAc,CAACF,IAAI,EAAEC,KAAK,CAAC,CAC5B3B,IAAI,CAAEC,GAAG,IAAK;MACbP,cAAc,CAACO,GAAG,CAAC;MACnB4B,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,CACDzB,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;EACzB;EACA,SAASyB,gBAAgBA,CAACnB,IAAI,EAAC;IAC7BjC,GAAG,CAACqB,eAAe,CAAC,CAAC,CAClBC,IAAI,CAAEC,GAAG,IAAK;MACbH,QAAQ,CAAEuB,KAAK,IAAKA,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACd,GAAI,CAAC,CAAC;MACpDhB,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAACF,OAAO,CAACG,KAAK,CAAC;EACzB;EACA,SAASwB,aAAaA,CAAA,EAAG;IACvB7C,wBAAwB,CAAC,KAAK,CAAC;IAC/BE,yBAAyB,CAAC,KAAK,CAAC;IAChCE,sBAAsB,CAAC,KAAK,CAAC;IAC7BI,eAAe,CAAC,IAAI,CAAC;EACvB;EACA,oBACEZ,OAAA,CAACH,kBAAkB,CAACwD,QAAQ;IAACC,KAAK,EAAEzC,WAAY;IAAA0C,QAAA,eAC9CvD,OAAA;MAAKwD,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBvD,OAAA,CAACV,MAAM;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV5D,OAAA,CAACT,IAAI;QACH0B,KAAK,EAAEA,KAAM;QACb4C,YAAY,EAAElC,qBAAsB;QACpCmC,aAAa,EAAElC,sBAAuB;QACtCmC,UAAU,EAAElC,mBAAoB;QAChCmC,WAAW,EAAElC,eAAgB;QAC7BmC,YAAY,EAAEjC,qBAAsB;QACpCkC,UAAU,EAAEjC,cAAe;QAC3BkC,YAAY,EAAEnC;MAAsB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACF5D,OAAA,CAACR,MAAM;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV5D,OAAA,CAACN,gBAAgB;QACf0E,MAAM,EAAE/D,sBAAuB;QAC/BgE,OAAO,EAAEpB,aAAc;QACvBqB,YAAY,EAAE1B;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF5D,OAAA,CAACP,eAAe;QACd2E,MAAM,EAAEjE,qBAAsB;QAC9BkE,OAAO,EAAEpB;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF5D,OAAA,CAACL,aAAa;QACZyE,MAAM,EAAE7D,mBAAoB;QAC5B8D,OAAO,EAAEpB;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF5D,OAAA,CAACJ,UAAU;QACTmC,IAAI,EAAEpB,YAAa;QACnB0D,OAAO,EAAEpB;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAAC1D,EAAA,CA9GQD,GAAG;AAAAsE,EAAA,GAAHtE,GAAG;AAgHZ,eAAeA,GAAG;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}