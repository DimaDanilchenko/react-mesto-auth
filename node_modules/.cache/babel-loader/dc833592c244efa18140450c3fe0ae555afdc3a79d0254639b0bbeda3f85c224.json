{"ast":null,"code":"var _jsxFileName = \"/Users/dimad./Desktop/mesto-react/src/components/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(props) {\n  _s();\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n  function handleSetName(e) {\n    setName(e.target.value);\n  }\n  function handleSetLink(e) {\n    setLink(e.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onAddPlace({\n      name: name,\n      link: link\n    });\n  }\n  const [valueName, setValue] = useState(\"\");\n  const [valueDescription, setValueDescription] = useState(\"\");\n  const handleChangeName = e => {\n    setValue(e.target.value);\n  };\n  const handleChangeDescription = e => {\n    setValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"add-photo\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    value: value,\n    onChange: handleChangeName,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name-foto-input\",\n      type: \"text\",\n      className: \"popup__input add-photo-popup__input add-photo-popup__input_type_photo\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      minLength: 2,\n      maxLength: 40,\n      required: \"\",\n      onChange: handleSetName,\n      onSubmit: handleSubmit,\n      value: value,\n      onChange: handleChangeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name-foto-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"link-photo-input\",\n      type: \"url\",\n      className: \"popup__input add-photo-popup__input add-photo-popup__input_type_link\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0441\\u043A\\u0430\\u0447\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      required: \"\",\n      onChange: handleSetLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"link-photo-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"B2cXYZO7R3BWlvRqQV4/DJJ2dGY=\");\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","useState","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","props","_s","name","setName","link","setLink","handleSetName","e","target","value","handleSetLink","handleSubmit","preventDefault","onAddPlace","valueName","setValue","valueDescription","setValueDescription","handleChangeName","handleChangeDescription","title","isOpen","onClose","buttonText","onSubmit","onChange","children","id","type","className","placeholder","minLength","maxLength","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dimad./Desktop/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n  function handleSetName(e) {\n    setName(e.target.value);\n  }\n  function handleSetLink(e) {\n    setLink(e.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onAddPlace({\n      name: name,\n      link: link,\n    });\n  }\n  const [valueName, setValue] = useState(\"\");\n  const [valueDescription, setValueDescription] = useState(\"\");\n  const handleChangeName = e => {\n    setValue(e.target.value);\n  }\n  const handleChangeDescription = e => {\n    setValue(e.target.value);\n  }\n  return (\n    <PopupWithForm\n      title=\"Новое место\"\n      name=\"add-photo\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n      value={value}\n      onChange={handleChangeName}\n    >\n      <input\n        id=\"name-foto-input\"\n        type=\"text\"\n        className=\"popup__input add-photo-popup__input add-photo-popup__input_type_photo\"\n        name=\"name\"\n        placeholder=\"Название\"\n        minLength={2}\n        maxLength={40}\n        required=\"\"\n        onChange={handleSetName}\n        onSubmit={handleSubmit}\n        value={value}\n        onChange={handleChangeDescription}\n      />\n      <span className=\"name-foto-input-error\" />\n      <input\n        id=\"link-photo-input\"\n        type=\"url\"\n        className=\"popup__input add-photo-popup__input add-photo-popup__input_type_link\"\n        name=\"link\"\n        placeholder=\"Ссылка на скачивание\"\n        required=\"\"\n        onChange={handleSetLink}\n      />\n      <span className=\"link-photo-input-error\" />\n    </PopupWithForm>\n  );\n}\nexport default AddPlacePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}