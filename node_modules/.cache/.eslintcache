[{"/Users/dimad./Desktop/react-mesto-auth/src/index.js":"1","/Users/dimad./Desktop/react-mesto-auth/src/reportWebVitals.js":"2","/Users/dimad./Desktop/react-mesto-auth/src/components/App.js":"3","/Users/dimad./Desktop/react-mesto-auth/src/components/Main.js":"4","/Users/dimad./Desktop/react-mesto-auth/src/components/AddPlacePopup.js":"5","/Users/dimad./Desktop/react-mesto-auth/src/components/ImagePopup.js":"6","/Users/dimad./Desktop/react-mesto-auth/src/components/EditAvatarPopup.js":"7","/Users/dimad./Desktop/react-mesto-auth/src/components/Footer.js":"8","/Users/dimad./Desktop/react-mesto-auth/src/components/Header.js":"9","/Users/dimad./Desktop/react-mesto-auth/src/components/EditProfilePopup.js":"10","/Users/dimad./Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js":"11","/Users/dimad./Desktop/react-mesto-auth/src/utils/api.js":"12","/Users/dimad./Desktop/react-mesto-auth/src/components/Card.js":"13","/Users/dimad./Desktop/react-mesto-auth/src/components/PopupWithForm.js":"14"},{"size":546,"mtime":1690358260000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1690358260000,"results":"17","hashOfConfig":"16"},{"size":4164,"mtime":1690358260000,"results":"18","hashOfConfig":"16"},{"size":2176,"mtime":1690358260000,"results":"19","hashOfConfig":"16"},{"size":1783,"mtime":1690358260000,"results":"20","hashOfConfig":"16"},{"size":693,"mtime":1690358260000,"results":"21","hashOfConfig":"16"},{"size":1016,"mtime":1690358260000,"results":"22","hashOfConfig":"16"},{"size":166,"mtime":1690358260000,"results":"23","hashOfConfig":"16"},{"size":232,"mtime":1690358260000,"results":"24","hashOfConfig":"16"},{"size":2138,"mtime":1690358260000,"results":"25","hashOfConfig":"16"},{"size":83,"mtime":1690358260000,"results":"26","hashOfConfig":"16"},{"size":2347,"mtime":1690358260000,"results":"27","hashOfConfig":"16"},{"size":1236,"mtime":1690358260000,"results":"28","hashOfConfig":"16"},{"size":1369,"mtime":1690358260000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"134etsf",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dimad./Desktop/react-mesto-auth/src/index.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/App.js",["74","75","76","77"],[],"import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardClick, setIsDeleteCardClick] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isCardLikeClick, setIsCardLikeClick] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch(console.error)\n    api.getUserProfile()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch(console.error)\n  }, [])\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleDeleteCardClick() {\n    setIsDeleteCardClick(true);\n  }\n  function handleAddPlaceSubmit({ name, link }) {\n    api.addNewCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopup();\n      })\n      .catch(console.error)\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch(console.error);\n  }\n  function handleUpdateUser({ name, about }) {\n    api.setUserProfile(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopup();\n      })\n      .catch(console.error)\n  }\n  function handleUpdateAvatar({ avatar }) {\n    api.setUserAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopup();\n      })\n      .catch(console.error);\n  }\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then((res) => {\n        setCards((state) => state.filter((item) => item._id !== card._id));\n      })\n      .catch(console.error)\n  }\n  function closeAllPopup() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          cards={cards}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopup}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopup}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopup}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopup}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/dimad./Desktop/react-mesto-auth/src/components/Main.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Footer.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Header.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/EditProfilePopup.js",["78"],[],"import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [props.isOpen]);\n  function handleSetName(e) {\n    setName(e.target.value);\n  }\n  function handleSetDescription(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n  return (\n    <PopupWithForm\n      title=\"Редактировать данные\"\n      name=\"profile\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      buttonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        id=\"name-input\"\n        type=\"text\"\n        className=\"popup__input profile-popup__input profile-popup__input_type_name\"\n        name=\"popupName\"\n        placeholder=\"Имя\"\n        minLength={2}\n        maxLength={40}\n        required=\"\"\n        value={name || ''}\n        onChange={handleSetName}\n      />\n      <span className=\"name-input-error\" />\n      <input\n        id=\"job-input\"\n        type=\"text\"\n        className=\"popup__input profile-popup__input profile-popup__input_type_job\"\n        name=\"popupJob\"\n        placeholder=\"О себе\"\n        minLength={2}\n        maxLength={200}\n        required=\"\"\n        value={description || ''}\n        onChange={handleSetDescription}\n      />\n      <span className=\"job-input-error\" />\n    </PopupWithForm>\n\n  );\n}\nexport default EditProfilePopup;","/Users/dimad./Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/utils/api.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/Card.js",[],[],"/Users/dimad./Desktop/react-mesto-auth/src/components/PopupWithForm.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":16,"column":10,"nodeType":"81","messageId":"82","endLine":16,"endColumn":27},{"ruleId":"79","severity":1,"message":"83","line":19,"column":10,"nodeType":"81","messageId":"82","endLine":19,"endColumn":25},{"ruleId":"79","severity":1,"message":"84","line":19,"column":27,"nodeType":"81","messageId":"82","endLine":19,"endColumn":45},{"ruleId":"79","severity":1,"message":"85","line":48,"column":12,"nodeType":"81","messageId":"82","endLine":48,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":18,"column":6,"nodeType":"88","endLine":18,"endColumn":20,"suggestions":"89"},"no-unused-vars","'isDeleteCardClick' is assigned a value but never used.","Identifier","unusedVar","'isCardLikeClick' is assigned a value but never used.","'setIsCardLikeClick' is assigned a value but never used.","'handleDeleteCardClick' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'currentUser.about' and 'currentUser.name'. Either include them or remove the dependency array.","ArrayExpression",["90"],{"desc":"91","fix":"92"},"Update the dependencies array to be: [currentUser.about, currentUser.name, props.isOpen]",{"range":"93","text":"94"},[563,577],"[currentUser.about, currentUser.name, props.isOpen]"]